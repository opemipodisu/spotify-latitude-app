import type { QueryMetadata, ResolveFn, SupportedMethod } from './compiler/types';
export type CompileParams = {
    query: string;
    resolveFn: ResolveFn;
    supportedMethods?: Record<string, SupportedMethod>;
};
export declare function compile({ query, supportedMethods, resolveFn, }: CompileParams): Promise<string>;
export declare function readMetadata({ query, supportedMethods, }: {
    query: string;
    supportedMethods?: Record<string, SupportedMethod>;
}): Promise<QueryMetadata>;
export { default as CompileError } from './error/error';
export * from './compiler/types';
export * from './compiler/utils';
//# sourceMappingURL=index.d.ts.map