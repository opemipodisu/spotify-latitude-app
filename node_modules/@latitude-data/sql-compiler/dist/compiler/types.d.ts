export type SupportedMethodRequirements = {
    interpolationPolicy?: 'allow' | 'disallow' | 'require';
    interpolationMethod?: 'parameterize' | 'raw';
    requireStaticArguments?: boolean;
};
export type SupportedMethod = {
    requirements?: Partial<SupportedMethodRequirements>;
    resolve: Function;
    readMetadata: (args?: unknown[]) => Promise<QueryMetadata>;
};
export type ResolveFn = (value: unknown) => Promise<string>;
export type CompileContext = {
    sql: string;
    supportedMethods: Record<string, SupportedMethod>;
    resolveFn: ResolveFn;
};
type Config = Record<string, unknown>;
export type QueryMetadata<T extends Config = Config> = {
    config: T;
    methods: Set<string>;
    rawSql?: string;
    sqlHash?: string;
};
export {};
//# sourceMappingURL=types.d.ts.map