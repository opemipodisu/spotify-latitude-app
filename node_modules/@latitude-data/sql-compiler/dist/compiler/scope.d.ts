export default class Scope {
    /**
     * Global stash
     * All variable values are stored in a single global array. This is done to allow multiple
     * scopes to share the same variable values and be able to modify them.
     *
     * For example:
     * ```sql
     * {var1 = 1}
     * {#if <condition>}
     *  {var1 = 2}
     *  {var2 = 3}
     * {/if}
     * ```
     * In this case, there are two scopes: root and if. Both scopes share the same variable `var1`,
     * and modifying it in the if scope should also modify it in the root scope. But `var2` is only
     * defined in the if scope and should not be accessible in the root scope.
     */
    private static stash;
    private static readFromStash;
    private static addToStash;
    private static modifyStash;
    /**
     * Local scope
     * Every scope has its own local stash that contains the indexes of the variables and constants
     * in the global stash.
     */
    private consts;
    private vars;
    constructor();
    exists(name: string): boolean;
    isConst(name: string): boolean;
    get(name: string): unknown;
    defineConst(name: string, value: unknown): void;
    set(name: string, value: unknown): void;
    copy(): Scope;
}
//# sourceMappingURL=scope.d.ts.map